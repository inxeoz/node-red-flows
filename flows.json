[
    {
        "id": "415686e5cb1123bc",
        "type": "tab",
        "label": "Devotee profile",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "tab-req-otp-proxy",
        "type": "tab",
        "label": "request_otp â†’ internal generate_otp",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4e3f94bc6e2686e8",
        "type": "tab",
        "label": "admin profile",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1dc44175b2bd6ff0",
        "type": "tab",
        "label": "Devotee User UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "511129eac45b3a08",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "purple",
                "accents": "deep-purple",
                "warn": "deep-purple",
                "background": "orange",
                "palette": "dark"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "tab_main",
        "type": "ui_tab",
        "name": "Create Devotee",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b42a98937320bba",
        "type": "ui_tab",
        "name": "Verify Otp",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f6dac59f01e23aa8",
        "type": "ui_group",
        "name": "Create Devotee",
        "tab": "tab_main",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e33ce41e047a8b9",
        "type": "ui_group",
        "name": "Verify Form",
        "tab": "1b42a98937320bba",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "93c9f389c941c2ed",
        "type": "ui_tab",
        "name": "Get Profile",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d08c7b6ceea1e1a9",
        "type": "ui_group",
        "name": "Profile",
        "tab": "93c9f389c941c2ed",
        "order": 1,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "04db393d4160a7ce",
        "type": "ui_tab",
        "name": "Login Request",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "13e44f449e0c6e2a",
        "type": "ui_group",
        "name": "Login Requst main",
        "tab": "04db393d4160a7ce",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1151365634dc60fb",
        "type": "ui_link",
        "name": "Link 5",
        "link": "http://127.0.0.1:1880/#flow/1dc44175b2bd6ff0",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 5
    },
    {
        "id": "e01094d60a5bf532",
        "type": "ui_tab",
        "name": "Set env Values",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f2dcfc980a88e91c",
        "type": "ui_group",
        "name": "Env Form",
        "tab": "e01094d60a5bf532",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b9426555fd8c81c",
        "type": "ui_spacer",
        "z": "1dc44175b2bd6ff0",
        "name": "spacer",
        "group": "f2dcfc980a88e91c",
        "order": 3,
        "width": 10,
        "height": 1
    },
    {
        "id": "c91329ee6d01ea9d",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "name": "POST /create_user",
        "url": "/create_user",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "4b4259a416380c53"
            ]
        ]
    },
    {
        "id": "4b4259a416380c53",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "fdfcfc3755f844d0"
            ]
        ]
    },
    {
        "id": "fdfcfc3755f844d0",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst name = body.name ;\nconst phone = body.phone;\n\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nconst end_point = \"darshan_devoteee_profile.darshan_devoteee_profile.create_devoteee_user\"\n\nmsg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + end_point;\n\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { phone, name };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 120,
        "wires": [
            [
                "cb1e9b48409b692f"
            ],
            [
                "cd0bd72d1c6125cb"
            ]
        ]
    },
    {
        "id": "cb1e9b48409b692f",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 810,
        "y": 60,
        "wires": [
            [
                "dc7a61e9275fb0f2"
            ]
        ]
    },
    {
        "id": "dc7a61e9275fb0f2",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\n\n// // Log the API response payload directly without parsing\n\n// flow.set(\"myData\", msg.payload.message);\n// var savedData = flow.get(\"myData\");\n\n// // or for global scope\n// // var savedData = global.get(\"myData\");\n\n// // Now you can use savedData as needed\n// node.warn(\"Saved data: \" + JSON.stringify(savedData));\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "cd0bd72d1c6125cb"
            ]
        ]
    },
    {
        "id": "cd0bd72d1c6125cb",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 120,
        "wires": []
    },
    {
        "id": "2949f63bd6040e91",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "GET /get_profile",
        "url": "/get_profile",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 2860,
        "wires": [
            [
                "52bb1449035a24c2"
            ]
        ]
    },
    {
        "id": "52bb1449035a24c2",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 2980,
        "wires": [
            [
                "cbc9aaa892dc82c4"
            ]
        ]
    },
    {
        "id": "cbc9aaa892dc82c4",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst token = body.token;\nconst login_as = body.login_as;\n\nconst admin_url_end = \"session_admin.session_admin.get_profile\"\nconst devotee_url_end = \"session_devoteee.session_devoteee.get_profile\"\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nif (login_as === \"Admin\") {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + admin_url_end\n\n} else {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + devotee_url_end\n}\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { token };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2980,
        "wires": [
            [
                "182d238b7de2b4ba"
            ],
            [
                "53ccf699ddaab3ef"
            ]
        ]
    },
    {
        "id": "182d238b7de2b4ba",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "get_profile",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 910,
        "y": 2880,
        "wires": [
            [
                "37fe62f3b9f4cedf"
            ]
        ]
    },
    {
        "id": "37fe62f3b9f4cedf",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 2880,
        "wires": [
            [
                "53ccf699ddaab3ef"
            ]
        ]
    },
    {
        "id": "53ccf699ddaab3ef",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1460,
        "y": 2980,
        "wires": []
    },
    {
        "id": "912eb2776fc91698",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "POST /create_appointment",
        "url": "/create_appointment",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 350,
        "y": 3140,
        "wires": [
            [
                "c44a552b2e127bb7"
            ]
        ]
    },
    {
        "id": "c44a552b2e127bb7",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 3240,
        "wires": [
            [
                "73c528abfa2d5074"
            ]
        ]
    },
    {
        "id": "73c528abfa2d5074",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst token = body.token;\nconst login_as = body.login_as;\nconst details = body.details;\n\nconst admin_url_end = \"session_admin.session_admin.create_appointment\"\nconst devotee_url_end = \"session_devoteee.session_devoteee.create_appointment\"\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nif (login_as === \"Admin\") {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + admin_url_end\n\n} else {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + devotee_url_end\n}\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { token, details };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 3240,
        "wires": [
            [
                "0735056654a7f324"
            ],
            [
                "64fff181e7bfce1e"
            ]
        ]
    },
    {
        "id": "0735056654a7f324",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "create_appointment",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1000,
        "y": 3120,
        "wires": [
            [
                "17aa96ad68481a2c"
            ]
        ]
    },
    {
        "id": "17aa96ad68481a2c",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 3120,
        "wires": [
            [
                "64fff181e7bfce1e"
            ]
        ]
    },
    {
        "id": "64fff181e7bfce1e",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1460,
        "y": 3240,
        "wires": []
    },
    {
        "id": "599a2f1870f5d562",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "POST /get_appointment_list",
        "url": "/get_appointment_list",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 3400,
        "wires": [
            [
                "d26ee4fb266bbb3b"
            ]
        ]
    },
    {
        "id": "d26ee4fb266bbb3b",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 550,
        "y": 3500,
        "wires": [
            [
                "07a2335ed0c9a0a9"
            ]
        ]
    },
    {
        "id": "07a2335ed0c9a0a9",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst token = body.token;\nconst login_as = body.login_as;\n\nconst admin_url_end = \"session_admin.session_admin.get_appointment_list\"\nconst devotee_url_end = \"session_devoteee.session_devoteee.get_appointment_list\"\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nif (login_as === \"Admin\") {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + admin_url_end\n\n} else {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + devotee_url_end\n}\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { token };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 3500,
        "wires": [
            [
                "af08df81bf24090a"
            ],
            [
                "d4d5a916b2baf48a"
            ]
        ]
    },
    {
        "id": "af08df81bf24090a",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "get_appointment_list",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1040,
        "y": 3380,
        "wires": [
            [
                "e3a0aa79e58c8684"
            ]
        ]
    },
    {
        "id": "e3a0aa79e58c8684",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 3380,
        "wires": [
            [
                "d4d5a916b2baf48a"
            ]
        ]
    },
    {
        "id": "d4d5a916b2baf48a",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1500,
        "y": 3500,
        "wires": []
    },
    {
        "id": "ab85283e4ce260e4",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "POST /update_profile",
        "url": "/update_profile",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 380,
        "y": 3660,
        "wires": [
            [
                "23df4b2043c63e10"
            ]
        ]
    },
    {
        "id": "23df4b2043c63e10",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 3780,
        "wires": [
            [
                "fc07d7ae7f3060d8"
            ]
        ]
    },
    {
        "id": "fc07d7ae7f3060d8",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst token = body.token;\nconst login_as = body.login_as;\nconst info = body.info;\n\n\nconst admin_url_end = \"session_admin.session_admin.update_profile\"\nconst devotee_url_end = \"session_devoteee.session_devoteee.update_profile\"\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nif (login_as === \"Admin\") {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + admin_url_end\n\n} else {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + devotee_url_end\n}\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { token , info};\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 3780,
        "wires": [
            [
                "3658d3cb04c60404"
            ],
            [
                "58c5d528b47e1c98"
            ]
        ]
    },
    {
        "id": "3658d3cb04c60404",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "update_profile",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1080,
        "y": 3660,
        "wires": [
            [
                "33949509a20eb6b8"
            ]
        ]
    },
    {
        "id": "33949509a20eb6b8",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 3660,
        "wires": [
            [
                "58c5d528b47e1c98"
            ]
        ]
    },
    {
        "id": "58c5d528b47e1c98",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1560,
        "y": 3780,
        "wires": []
    },
    {
        "id": "7b621719bb9f95de",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "POST /get_list_of_appointments_admin",
        "url": "/get_list_of_appointments_admin",
        "method": "get",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 430,
        "y": 3920,
        "wires": [
            [
                "c96ab21277e7fb77"
            ]
        ]
    },
    {
        "id": "c96ab21277e7fb77",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 610,
        "y": 4040,
        "wires": [
            [
                "bd15eab5ea42764b"
            ]
        ]
    },
    {
        "id": "bd15eab5ea42764b",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\nconst token =\n  (msg.req && msg.req.headers && msg.req.headers[\"auth_token\"]) || \"\";\n\nconsole.log(\"Extracted token from header:\", token);\n\n\n\n// Read query parameters 'page_length' and 'page_start'\nconst limit_start = (msg.req && msg.req.query && msg.req.query.limit_start) || null;\nconst limit_page_length = (msg.req && msg.req.query && msg.req.query.limit_page_length) || null;\n\nconsole.log(\"Extracted token from header:\", token);\nconsole.log(\"Extracted limit_start from query:\", limit_start);\nconsole.log(\"Extracted limit_page_length from query:\", limit_page_length);\n\n\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\nconst FALLBACK_AUTH = \"token 1212:1212\"; // optional fallback\nheaders[\"Authorization\"] =  FALLBACK_AUTH;\nmsg.headers = headers;\n\n\n\n\n\n// Only forward the token as payload if needed\nmsg.payload = { token, limit_start, limit_page_length };\n\nreturn [msg, null];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4040,
        "wires": [
            [
                "ea7a203520215be5"
            ],
            [
                "4d2e48bcc70b47d0"
            ]
        ]
    },
    {
        "id": "ea7a203520215be5",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "get_appointment_list",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.token.token.get_list_of_appointments_admin",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1100,
        "y": 3920,
        "wires": [
            [
                "08dbd050610f6ef9"
            ]
        ]
    },
    {
        "id": "08dbd050610f6ef9",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 3920,
        "wires": [
            [
                "4d2e48bcc70b47d0"
            ]
        ]
    },
    {
        "id": "4d2e48bcc70b47d0",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1560,
        "y": 4040,
        "wires": []
    },
    {
        "id": "12f5aa01cdf4f313",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "d": true,
        "name": "POST /get_appointment",
        "url": "/get_appointment",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 400,
        "y": 4180,
        "wires": [
            [
                "7baaa53f8654c3fd"
            ]
        ]
    },
    {
        "id": "7baaa53f8654c3fd",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 4300,
        "wires": [
            [
                "0b6043a93eaa7828"
            ]
        ]
    },
    {
        "id": "0b6043a93eaa7828",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst token = body.token;\nconst login_as = body.login_as;\nconst appointment_id = body.appointment_id;\n\nconst admin_url_end = \"session_admin.session_admin.get_appointment\"\nconst devotee_url_end = \"session_devoteee.session_devoteee.get_appointment\"\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nif (login_as === \"Admin\") {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + admin_url_end\n\n} else {\n  msg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + devotee_url_end\n}\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { token, appointment_id };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 4300,
        "wires": [
            [
                "df2864672f978336"
            ],
            [
                "1bf469b779786222"
            ]
        ]
    },
    {
        "id": "df2864672f978336",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "get_appointment_list",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1120,
        "y": 4180,
        "wires": [
            [
                "bc5e8b7819fd6453"
            ]
        ]
    },
    {
        "id": "bc5e8b7819fd6453",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 4180,
        "wires": [
            [
                "1bf469b779786222"
            ]
        ]
    },
    {
        "id": "1bf469b779786222",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1580,
        "y": 4300,
        "wires": []
    },
    {
        "id": "05ea98e7de93d45b",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "name": "POST /verify_login",
        "url": "/verify_login",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 540,
        "wires": [
            [
                "de17737d844a94fb"
            ]
        ]
    },
    {
        "id": "de17737d844a94fb",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "e05ff57ad24cf181"
            ]
        ]
    },
    {
        "id": "e05ff57ad24cf181",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst otp = body.otp ;\nconst login_token = body.login_token;\n\nconsole.log(\"login tokn\" + msg.payload)\n\n// var login_token = flow.get(\"login_token\");\n\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nconst end_point = \"active_session.active_session._verify_login_token_and_get_session_token\"\n\nmsg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + end_point;\n\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { otp, login_token };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 540,
        "wires": [
            [
                "e712cb0e9013b75b"
            ],
            [
                "b49ed30bfd0870f9"
            ]
        ]
    },
    {
        "id": "e712cb0e9013b75b",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 890,
        "y": 480,
        "wires": [
            [
                "63f03fb8b29c37fc"
            ]
        ]
    },
    {
        "id": "63f03fb8b29c37fc",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 540,
        "wires": [
            [
                "b49ed30bfd0870f9"
            ]
        ]
    },
    {
        "id": "b49ed30bfd0870f9",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 540,
        "wires": []
    },
    {
        "id": "4e53a9baaa6c39f1",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "name": "POST /login_request",
        "url": "login_request",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "03fcae363606b665"
            ]
        ]
    },
    {
        "id": "03fcae363606b665",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "248c7a4d15104d85"
            ]
        ]
    },
    {
        "id": "248c7a4d15104d85",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst profile_type = body.profile_type ;\nconst phone = body.phone;\n\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nconst end_point = \"active_session.active_session._login_request\"\n\nmsg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + end_point;\n\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { phone, profile_type };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 340,
        "wires": [
            [
                "3ef1bc617cc87995"
            ],
            [
                "31c860a45bf49e3a"
            ]
        ]
    },
    {
        "id": "3ef1bc617cc87995",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 890,
        "y": 280,
        "wires": [
            [
                "8e8149b2f96d3103"
            ]
        ]
    },
    {
        "id": "8e8149b2f96d3103",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 340,
        "wires": [
            [
                "31c860a45bf49e3a"
            ]
        ]
    },
    {
        "id": "31c860a45bf49e3a",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 340,
        "wires": []
    },
    {
        "id": "7667c063a8f6f3ad",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "name": "POST /get_profile",
        "url": "/get_profile",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "2ef9effb3b712268"
            ]
        ]
    },
    {
        "id": "2ef9effb3b712268",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 820,
        "wires": [
            [
                "59fc16020d24a407"
            ]
        ]
    },
    {
        "id": "59fc16020d24a407",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\nconst session_token = body.session_token ;\n\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nmsg.url = \"http://127.0.0.1:1880/session_token_to_profile_id\" ;\n\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { session_token };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 700,
        "wires": [
            [
                "44fae6377e324a1d"
            ],
            []
        ]
    },
    {
        "id": "44fae6377e324a1d",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 750,
        "y": 700,
        "wires": [
            [
                "6352b87af3c4f46a"
            ]
        ]
    },
    {
        "id": "d96c22fe1aac124a",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 820,
        "wires": [
            [
                "c5d1e9d35d88dfbf"
            ]
        ]
    },
    {
        "id": "c5d1e9d35d88dfbf",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 820,
        "wires": []
    },
    {
        "id": "74d47667fc8d2fbd",
        "type": "http in",
        "z": "415686e5cb1123bc",
        "name": "POST /session_token_to_profile_id",
        "url": "/session_token_to_profile_id",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1120,
        "wires": [
            [
                "1fe01e1c35c991fb"
            ]
        ]
    },
    {
        "id": "1fe01e1c35c991fb",
        "type": "json",
        "z": "415686e5cb1123bc",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1120,
        "wires": [
            [
                "048731984c6a4ce9"
            ]
        ]
    },
    {
        "id": "048731984c6a4ce9",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\n\n\n\nlet body = JSON.parse(msg.payload);\n\nconst session_token = body.session_token;\n\nconsole.log(\"session_token tokn\" + msg.payload)\n\n// var login_token = flow.get(\"login_token\");\n\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nconst end_point = \"active_session.active_session.session_token_to_profile_id\"\n\nmsg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + end_point;\n\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\nmsg.payload = { session_token };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1120,
        "wires": [
            [
                "c8e091923e056e8c"
            ],
            [
                "26037a25ea7289b0"
            ]
        ]
    },
    {
        "id": "c8e091923e056e8c",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "90ddba98830db337"
            ]
        ]
    },
    {
        "id": "90ddba98830db337",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Forward status & JSON",
        "func": "msg.headers = Object.assign({}, msg.headers, { \"Content-Type\": \"application/json\" });\n// Keep upstream status if present; default 200\nmsg.statusCode = msg.statusCode || 200;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1120,
        "wires": [
            [
                "26037a25ea7289b0"
            ]
        ]
    },
    {
        "id": "26037a25ea7289b0",
        "type": "http response",
        "z": "415686e5cb1123bc",
        "name": "HTTP response",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6352b87af3c4f46a",
        "type": "function",
        "z": "415686e5cb1123bc",
        "name": "Build downstream request",
        "func": "// Read custom header 'auth_token'\nlet message = msg.payload.message;\n\nconsole.log('message ', + JSON.stringify(message))\n\n\nif (message.profile_type != \"Darshan Devoteee Profile\" ) {\n\nmsg.payload = {'err' : 'profile type mismatch'}\nreturn [null, msg];\n\n}\n\n// Build headers for outbound request\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\n\n\nconst end_point = \"darshan_devoteee_profile.darshan_devoteee_profile.get_profile\"\n\nmsg.url = \"http://127.0.0.1:8001/api/method/mahakaal.darshan_booking.doctype.\" + end_point;\n\n\nheaders[\"Authorization\"] = \"token 1212:1212\"; // optional fallback\n\nmsg.headers = headers;\n\n// Only forward the token as payload if needed\n\nconst profile_id = message.profile_id;\nmsg.payload = { profile_id };\n\nreturn [msg];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 820,
        "wires": [
            [
                "7829feb142afbc00"
            ],
            [
                "d96c22fe1aac124a"
            ]
        ]
    },
    {
        "id": "7829feb142afbc00",
        "type": "http request",
        "z": "415686e5cb1123bc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": true,
        "headers": [],
        "x": 1010,
        "y": 780,
        "wires": [
            [
                "d96c22fe1aac124a"
            ]
        ]
    },
    {
        "id": "919fbca7c4381220",
        "type": "ui_form",
        "z": "1dc44175b2bd6ff0",
        "name": "Create user",
        "label": "Create user",
        "group": "f6dac59f01e23aa8",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Phone",
                "value": "phone",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "phone": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "0442634df8528067"
            ]
        ]
    },
    {
        "id": "0442634df8528067",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Build POST to /create_user",
        "func": "const data = msg.payload || {};\nflow.set(\"phone\", data.phone);       // <-- add this line\nmsg.headers = { 'Content-Type':'application/json' };\nmsg.payload = data; // object {name, phone}\n// Change host if your http-in is remote\nmsg.url = 'http://127.0.0.1:1880/create_user';\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 200,
        "wires": [
            [
                "14faab14893c5079"
            ]
        ]
    },
    {
        "id": "14faab14893c5079",
        "type": "http request",
        "z": "1dc44175b2bd6ff0",
        "name": "POST /create_user",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 200,
        "wires": [
            [
                "2ede462a6077aa7b"
            ]
        ]
    },
    {
        "id": "2ede462a6077aa7b",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Format server response",
        "func": "let message = msg.payload.message;\n\nnode.warn(\"Saved data: \" + JSON.stringify(message));\n\n// if (message.login_token == null) {\n//     // msg.payload = message.err;\n//     msg.payload = message;\n\n// } else {\n    msg.payload = message;\n// }\n\n\n\nif (message.login_token ) {\n\n\n    flow.set(\"login_token\", message.login_token);\n    var login_token = flow.get(\"login_token\");\n\n    node.warn(\"login_token data: \" + login_token);\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 200,
        "wires": [
            [
                "32d755f3bd667ce0"
            ]
        ]
    },
    {
        "id": "32d755f3bd667ce0",
        "type": "ui_template",
        "z": "1dc44175b2bd6ff0",
        "group": "f6dac59f01e23aa8",
        "name": "Display Create user",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:15px; line-height:1.4; color:#fff;\">\n    <p>\n        {{ msg.payload.err ? \"You got error: \" + msg.payload.err : (msg.payload.login_token ? \"You got token\" : \"You got\n        nothing\") }}\n    </p>\n\n    <script>\n        (function(scope) {\n      scope.$watch('msg', function(msg) {\n        if(msg && msg.payload && msg.payload.login_token) {\n          window.location.href = \"http://127.0.0.1:1880/ui/#!/1\";\n        }\n      });\n    })(scope);\n    </script>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1150,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b775830e45988852",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "login_request",
        "func": "\n    // build request using values stored in flow\nconst phone = flow.get('phone');\nconst profile_type = flow.get('profile_type');\n\nconsole.log(\"on button click \", phone, \" \", profile_type)\n\nif (!phone || !profile_type) {\n    // return a friendly error payload to display\n    msg.payload = { err: 'phone or profile_type missing (please enter both)' };\n    return msg;\n}\n\nmsg.payload = { phone: phone, profile_type: profile_type };\nmsg.headers = { 'Content-Type': 'application/json' };\n// Change host if your http-in is remote\nmsg.url = 'http://127.0.0.1:1880/login_request';\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "116bbbd91a842f2e"
            ]
        ]
    },
    {
        "id": "116bbbd91a842f2e",
        "type": "http request",
        "z": "1dc44175b2bd6ff0",
        "name": "POST /login_request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 690,
        "y": 1060,
        "wires": [
            [
                "285bcbbbc886047b"
            ]
        ]
    },
    {
        "id": "285bcbbbc886047b",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Format server response",
        "func": "let message = msg.payload.message;\n\nnode.warn(\"Saved data: \" + JSON.stringify(message));\n\n// if (message.login_token == null) {\n//     // msg.payload = message.err;\n//     msg.payload = message;\n\n// } else {\nmsg.payload = message;\n// }\n\n\n\nif (message.login_token) {\n\n\n    flow.set(\"login_token\", message.login_token);\n    var login_token = flow.get(\"login_token\");\n\n    node.warn(\"login_token data: \" + login_token);\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "55390b7b0cc42d8b"
            ]
        ]
    },
    {
        "id": "55390b7b0cc42d8b",
        "type": "ui_template",
        "z": "1dc44175b2bd6ff0",
        "group": "13e44f449e0c6e2a",
        "name": "Display  Login Request",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:15px; line-height:1.4; color:#fff;\">\n  <p>\n    {{ msg.payload }}\n  </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "2bcf7ccf0b7cf683",
        "type": "ui_text_input",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "label": "phone",
        "tooltip": "",
        "group": "13e44f449e0c6e2a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "phone",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 110,
        "y": 920,
        "wires": [
            [
                "b4921a4c0c37a1fa"
            ]
        ]
    },
    {
        "id": "7db778b5910cd51a",
        "type": "ui_dropdown",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "label": "profile_type",
        "tooltip": "profile_type",
        "place": "Select option",
        "group": "13e44f449e0c6e2a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Darshan Devoteee Profile",
                "value": "Darshan Devoteee Profile",
                "type": "str"
            },
            {
                "label": "Darshan Admin Profile",
                "value": "Darshan Admin Profile",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "profile_type",
        "topicType": "str",
        "className": "",
        "x": 130,
        "y": 980,
        "wires": [
            [
                "447165959a83f26d"
            ]
        ]
    },
    {
        "id": "82e7d2a37f75370b",
        "type": "ui_button",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "group": "13e44f449e0c6e2a",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Button Login Request",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "submit",
        "topicType": "msg",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "b775830e45988852"
            ]
        ]
    },
    {
        "id": "b4921a4c0c37a1fa",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "set phone flow",
        "func": "\nconst payload = msg.payload;\n\nconsole.log(\"phone \", payload)\n\n// incoming from text input\nflow.set('phone', payload);\nnode.warn('Saved phone in flow: ' + payload);\nreturn null; // don't send forward",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "447165959a83f26d",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "set profile_type flow",
        "func": "\nconst payload = msg.payload;\n\nconsole.log(\"profile_type \", payload)\n\n// incoming from text input\nflow.set('profile_type', payload);\nnode.warn('Saved phone in flow: ' + payload);\nreturn null; // don't send forward",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "68a21848b4615d31",
        "type": "ui_template",
        "z": "1dc44175b2bd6ff0",
        "group": "6e33ce41e047a8b9",
        "name": "Display session token",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:15px; line-height:1.4; color:#fff;\">\n    <p>\n        {{ msg.payload.err ? \"You got error: \" + msg.payload.err : (msg.payload.session_token ? \"You got login_token: \" +\n        msg.payload.session_token : \"You got nothing\") }}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "11472768a6d401fc",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "verify otp",
        "func": "\n\n\nconst data = msg.payload || {};\n\nconst login_token = flow.get('login_token');\n\n\nmsg.payload = { login_token: login_token, otp: data.otp };\n\n\nmsg.headers = { 'Content-Type': 'application/json' };\n\n// Change host if your http-in is remote\nmsg.url = 'http://127.0.0.1:1880/verify_login';\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 560,
        "wires": [
            [
                "5686b29ddf7509d0"
            ]
        ]
    },
    {
        "id": "5686b29ddf7509d0",
        "type": "http request",
        "z": "1dc44175b2bd6ff0",
        "name": "verify otp",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "8714113b727b4957"
            ]
        ]
    },
    {
        "id": "8714113b727b4957",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Format server response",
        "func": "let message = msg.payload.message;\n\nnode.warn(\"Saved data: \" + JSON.stringify(message));\n\n// if (message.session_token == null) {\n//     // msg.payload = message.err;\n//     msg.payload = message;\n\n// } else {\nmsg.payload = message;\n// }\n\n\n\nif (message.session_token) {\n\n\n    flow.set(\"session_token\", message.session_token);\n    var session_token = flow.get(\"session_token\");\n\n    node.warn(\"session_token data: \" + session_token);\n\n}\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 560,
        "wires": [
            [
                "68a21848b4615d31"
            ]
        ]
    },
    {
        "id": "c00dbce250561417",
        "type": "ui_text",
        "z": "1dc44175b2bd6ff0",
        "group": "6e33ce41e047a8b9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Phone",
        "format": "{{msg.payload.phone}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 430,
        "y": 500,
        "wires": []
    },
    {
        "id": "216a8fdf32f3cf12",
        "type": "ui_form",
        "z": "1dc44175b2bd6ff0",
        "name": "Enter otp",
        "label": "Enter otp",
        "group": "6e33ce41e047a8b9",
        "order": 2,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "otp",
                "value": "otp",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "otp": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "11472768a6d401fc"
            ]
        ]
    },
    {
        "id": "99bd29945d66571c",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "get phone",
        "func": "const phone = flow.get('phone');\n\nconsole.log(\"phone SSSSS\" , phone)\n\nmsg.payload = { phone: phone };\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 500,
        "wires": [
            [
                "c00dbce250561417"
            ]
        ]
    },
    {
        "id": "b6d3a886074b5348",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "get_profile",
        "func": "\n\nvar session_token = flow.get(\"session_token\");\n\nmsg.headers = { 'Content-Type': 'application/json' };\n// Change host if your http-in is remote\nmsg.url = 'http://127.0.0.1:1880/get_profile';\n\nmsg.payload = { session_token }\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1340,
        "wires": [
            [
                "3d30a8d1d92da8c3"
            ]
        ]
    },
    {
        "id": "3d30a8d1d92da8c3",
        "type": "http request",
        "z": "1dc44175b2bd6ff0",
        "name": "get_profile",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1340,
        "wires": [
            [
                "fe5e107470645994"
            ]
        ]
    },
    {
        "id": "fe5e107470645994",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Format server response",
        "func": "let message = msg.payload.message;\n\nmsg.payload = message;\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1340,
        "wires": [
            [
                "732b23cb00862bf7"
            ]
        ]
    },
    {
        "id": "732b23cb00862bf7",
        "type": "ui_template",
        "z": "1dc44175b2bd6ff0",
        "group": "d08c7b6ceea1e1a9",
        "name": "DisplayGet Profile",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:15px; width:100%; height:100%  color:#fff;\">\n    <p>\n        {{ msg.payload }}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "09d70e3c594e2ed3",
        "type": "ui_button",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "group": "d08c7b6ceea1e1a9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Profile",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1340,
        "wires": [
            [
                "b6d3a886074b5348"
            ]
        ]
    },
    {
        "id": "608b7f167373120e",
        "type": "ui_ui_control",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "events": "all",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "99bd29945d66571c"
            ]
        ]
    },
    {
        "id": "62f48915c9659a30",
        "type": "ui_form",
        "z": "1dc44175b2bd6ff0",
        "name": "Set env",
        "label": "Set env",
        "group": "f2dcfc980a88e91c",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Phone",
                "value": "phone",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "login_token",
                "value": "login_token",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "session_token",
                "value": "session_token",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "phone": "",
            "login_token": "",
            "session_token": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 120,
        "y": 1560,
        "wires": [
            [
                "b51e2a48e76e6c2f"
            ]
        ]
    },
    {
        "id": "b51e2a48e76e6c2f",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "set flow",
        "func": "const data = msg.payload || {};\n\nif (data.phone) {\n    flow.set(\"phone\", data.phone);  \n}\n\nif (data.login_token) {\n    flow.set(\"login_token\", data.login_token);\n}\n\n\nif (data.session_token) {\n    flow.set(\"session_token\", data.session_token);\n}\n\n\nif (data.name) {\n    flow.set(\"name\", data.name);\n}\n\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1560,
        "wires": [
            [
                "871a8a126c80d6a1"
            ]
        ]
    },
    {
        "id": "871a8a126c80d6a1",
        "type": "function",
        "z": "1dc44175b2bd6ff0",
        "name": "Format server response",
        "func": "\nmsg.payload = { phone: flow.get(\"phone\"), name: flow.get(\"name\"), login_token: flow.get(\"login_token\"), session_token: flow.get(\"session_token\") };\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1540,
        "wires": [
            [
                "705911538b47e07a"
            ]
        ]
    },
    {
        "id": "705911538b47e07a",
        "type": "ui_template",
        "z": "1dc44175b2bd6ff0",
        "group": "f2dcfc980a88e91c",
        "name": "Display Set Env",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div style=\"font-size:15px; line-height:1.4; color:#fff;\">\n    <p>\n        {{ msg.payload }}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "66edee797926fe03",
        "type": "ui_button",
        "z": "1dc44175b2bd6ff0",
        "name": "",
        "group": "f2dcfc980a88e91c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get Envs Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 1500,
        "wires": [
            [
                "871a8a126c80d6a1"
            ]
        ]
    }
]